# Configuration file for the satellite superresolution application
#
# Date:February 2019
# Author: Ignacio Heredia
# Email: iheredia@ifca.unican.es
# Github: ignacioheredia
#
# References
# ----------
# https://pyyaml.org/wiki/PyYAMLDocumentation


#####################################################
# Options for general configuration
#####################################################

general:

  base_directory:
    value: "."
    type: "str"
    help: >
          Base directory for data and models. All the data that will be read and written will be done within this
          directory.
          If path is relative it will be appended to the package path.

  tiles_directory:
    value: "data/tiles"
    type: "str"
    help: >
          Base directory for the satellite's tiles. If the path is relative, it will be appended to the package path.

  satellite:
    value: "sentinel2"
    type: "str"
    choices: ["sentinel2", "landsat8"]
    help: >
          Name of the satellite you want to use. Satellite options, as well as instructions on how to add additional
          satellites, are defined in /satsr/main_sat.py.


#####################################################
#  Options about your training routine
#####################################################

training:

  epochs:
    value: 30
    type: "int"
    help: >
          Training epochs

  batchsize:
    value: 64
    type: "int"
    help: >
          Batchsize

  max_res:
    value:
    type: "int"
    help: >
          Resolution to super-resolve with the model. If None we will train N models to super-resolve the N possible
          resolutions of the satellite.

  roi_x_y:
    value: [0,0,1000,1000]
    type: "list"
    help: >
          Sets the region of interest to extract as pixels locations on the 10m bands.
          Use this syntax: [x_1,y_1,x_2,y_2]. The order of points 1 and 2 does not matter.
          If set to None (and roi_lon_lat also None), the whole image will be superresolved.

          Example:
          `[0,0,1000,1000]`


          **ATTENTION**

          * We set the default region to [0,0,1000,1000] as many computers do not have the RAM to store in memory
          a complete image.

          * Each side must have a minimal size of 192.

  overwrite:
    value: True
    type: "bool"
    help: >
          Whether to overwrite or not the previously created patches.

  num_patches:
    value:
    type: "int"
    help: >
      Number of patches to take per image. If set to None, the number of patches will be proportional to the size of the
      image.

#####################################################
#  Options about your testing routine
#####################################################

testing:

  roi_x_y:
    value: [0,0,1000,1000]
    type: "list"
    help: >
          Sets the region of interest to extract as pixels locations on the 10m bands.
          Use this syntax: [x_1,y_1,x_2,y_2]. The order of points 1 and 2 does not matter.
          If set to None (and roi_lon_lat also None), the whole image will be superresolved.

          Example:
          `[0,0,1000,1000]`


          **ATTENTION**

          * We set the default region to [0,0,1000,1000] as many computers do not have the RAM to store in memory
          a complete image.

          * Each side must have a minimal size of 192.

  roi_lon_lat:
    value:
    type: "list"
    help: >
          Sets the region of interest in coordinates. Use this syntax: x_1,y_1,x_2,y_2.
          Use this syntax: [x_1,y_1,x_2,y_2]. The order of points 1 and 2 does not matter.
          If set to None (and roi_x_y also None), the whole image will be superresolved.

  max_res:
    value: 60
    type: "int"
    help: >
          Maximal resolution bands to use to make inference.
          In the case of Sentinel2:
          * if max_res=60 it will super-resolve the 20m and 60m bands (B1,B2,B3,B4,B5,B6,B7,B8,B8A,B9,B11,B12).
          * if max_res=20 it will super-resolve only the 20m bands (B2,B3,B4,B5,B6,B7,B8,B8A,B11,B12).
          Band B10 is to noisy and is not super-resolved.

  copy_original_bands:
    value: True
    type: "bool"
    help: >
          If True the original selected 10m bands are copied into the output file in addition to the super-resolved bands.
          In this case the output file may be used as a 10m version of the original Sentinel-2 file.

  output_file_format:
    value: 'GTiff'
    type: "str"
    help: >
          This must be a file format supported by GDAL. If that is not the case the file will be save in an .npz format

  output_path:
    value:
    type: "str"
    help: >
          Filepath of the output. If None the output file name will be the same as in the input tile and the output folder
          will be `./data/test_files/outputs`

  select_UTM:
    value:
    type: "str"
    help: >
          Select a specific UTM if several are available
