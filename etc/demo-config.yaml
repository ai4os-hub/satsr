# Configuration file for the satellite superresolution application
#
# Date:February 2019
# Author: Ignacio Heredia
# Email: iheredia@ifca.unican.es
# Github: ignacioheredia
#
# References
# ----------
# https://pyyaml.org/wiki/PyYAMLDocumentation


#####################################################
# Options for general configuration
#####################################################

general:

  satellite:
    value: "sentinel2"
    type: "str"
    choices: ["sentinel2", "landsat8", "viirs", "modis"]
    help: >
          Name of the satellite you want to use. Satellite options, as well as instructions on how to add additional
          satellites, are defined in /satsr/main_sat.py.


#####################################################
#  Options about your training routine
#####################################################

training:

  tiles_directory:
    value:
    type: "str"
    help: >
          Base directory for the satellite's tiles. Relative paths of the tiles defined in [train.txt/val.txt] are
          defined with respect to this path.
          If set to `None`, the default will be "./satsr/data/tiles".

  patches_directory:
    value:
    type: "str"
    help: >
          Base directory to save the satellite's tiles' patches. If the training involves a considerable amount of data,
          the user might consider pointing this path to a folder in an external drive, as patches can easily build to
          100's of GB.
          If set to `None`, the default will be "./satsr/data/patches".

  epochs:
    value: 30
    type: "int"
    help: >
          Training epochs

  batchsize:
    value: 64
    type: "int"
    help: >
          Batchsize

  max_res:
    value:
    type: "int"
    help: >
          Resolution to super-resolve with the model. If None we will train N models to super-resolve the N possible
          resolutions of the satellite.
          The options for the different satellites are:

               * Sentinel2: [20, 60]

               * LandSat8: [30]

               * VIIRS: [750]

               * MODIS: [500, 1000]

  roi_x_y:
    value: [0,0,1000,1000]
    type: "list"
    help: >
          Sets the region of interest to extract as pixels locations on the 10m bands.
          Use this syntax: `[x_1,y_1,x_2,y_2]`. The order of points 1 and 2 does not matter.
          If set to `None` (and `roi_lon_lat` also `None`), the whole image will be superresolved.

          Example:
          `[0,0,1000,1000]`


          **ATTENTION**

          * We set the default region to [0,0,1000,1000] as many computers do not have the RAM to store in memory
          a complete image.

          * Each side must have a minimal size of 192.

  overwrite:
    value: True
    type: "bool"
    help: >
          Whether to overwrite or not the previously created patches.

  num_patches:
    value:
    type: "int"
    help: >
      Number of patches to take per image. If set to None, the number of patches will be proportional to the size of the
      image.

  ckpt_freq:
    value:
    type: "float"
    range: [0, 1]
    help: >
          Frequency of the checkpoints (Float between 0 and 1). If None there will be no checkpoints saved. If 0 there
          will be 1 checkpoint per epoch. For example 0.1 means there will be 10 ckpts during the training.

  use_tensorboard:
    value: False
    type: "bool"
    help: >
          Whether to use or not Tensorboard for monitoring the training


#####################################################
#  Options about your testing routine
#####################################################

testing:

  roi_x_y_test:
    value: [0,0,1000,1000]
    type: "list"
    help: >
          Sets the region of interest to extract as pixels locations on the 10m bands.
          Use this syntax: `[x_1,y_1,x_2,y_2]`. The order of points 1 and 2 does not matter.
          If set to `None` (and `roi_lon_lat` also `None`), the whole image will be superresolved.

          Example:
          `[0,0,1000,1000]`


          **ATTENTION**

          * We set the default region to [0,0,1000,1000] as many computers do not have the RAM to store in memory
          a complete image.

          * Each side must have a minimal size of 192.

  roi_lon_lat_test:
    value:
    type: "list"
    help: >
          Sets the region of interest in coordinates.
          Use this syntax: `[x_1,y_1,x_2,y_2]`. The order of points 1 and 2 does not matter.
          If set to `None` (and `roi_x_y` also `None`), the whole image will be superresolved.

  max_res_test:
    value:
    type: "int"
    help: >
          Maximal resolution bands to use to make inference. If set to `None`, the super-resolution will be performed
          on all possible bands.The options for the different satellites are:

          * Sentinel2: [20, 60]

          * LandSat8: [30]

          * VIIRS: [750]

          * MODIS: [500, 1000]

  copy_original_bands:
    value: True
    type: "bool"
    help: >
          If True the original selected 10m bands are copied into the output file in addition to the super-resolved bands.
          In this case the output file may be used as a 10m version of the original Sentinel-2 file.

  output_file_format:
    value: 'GTiff'
    type: "str"
    help: >
          This must be a file format supported by GDAL. If that is not the case the file will be save in an .npz format

  output_path:
    value:
    type: "str"
    help: >
          Filepath of the output. If None the output file name will be the same as in the input tile and the output folder
          will be `./data/test_files/outputs`
